import cv2
import numpy as np

# img=cv2.imread('Lena.png', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[1,1,1],[1,-8,1],[1,1,1]])
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('edge', output)
# cv2.waitKey(0)

# img=cv2.imread('Lena.png', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[0,0,0],[0,1,0],[0,0,0]])
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('Identity', output)
# cv2.waitKey(0)

# img=cv2.imread('Lena.png', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[0,-1,0],[-1,4,-1],[0,-1,0]])
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('Edge detection', output)
# cv2.waitKey(0)

# img=cv2.imread('Lena.png', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[0,-1,0],[-1,5,-1],[0,-1,0]])
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('Sharpen', output)
# cv2.waitKey(0)

# img=cv2.imread('Lena.png', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[1,1,1],[1,1,1],[1,1,1]]) / 9
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('Box blur', output)
# cv2.waitKey(0)

# img=cv2.imread('Lena.png', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[1,2,1],[2,4,2],[1,2,1]]) / 16
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('Gaussian', output)
# cv2.waitKey(0)

# img=cv2.imread('Lena.jpg', cv2.IMREAD_GRAYSCALE)
# kernel = np.array([[1,4,6,4,1],[4,16,24,16,4],[6,24,36,24,6],[4,16,24,16,4],[1,4,6,4,1]]) / 256
# print(kernel)

# output = cv2.filter2D(img, -1, kernel)
# cv2.imshow('Gaussian blur 5*5', output)
# cv2.waitKey(0)

import tensorflow as tf
import matplotlib.pyplot as plt

fashion_mnist = tf.keras.datasets.fashion_mnist
(f_image_train, f_label_train),(f_image_test, f_label_test) = fashion_mnist.load_data()
f_image_train, f_image_test = f_image_train/255.0, f_image_test/255.0

class_names = ['T-shirt/top', 'Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag', 'Ankle boot']

plt.figure(figsize=(10,10))
for i in range(10):
    plt.subplot(3,4,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(f_image_train[i])
    plt.xlabel(class_names[f_label_train[i]])
plt.show()

# CNN
model = tf.keras.Sequential()
model.add(tf.keras.layers.Conv2D(64, (3, 3), activation='relu', input_shape=(28, 28, 1)))
model.add(tf.keras.layers.MaxPooling2D((2, 2)))
model.add(tf.keras.layers.Conv2D(64, (3, 3),activation='relu'))
model.add(tf.keras.layers.MaxPooling2D((2, 2)))
model.add(tf.keras.layers.Conv2D(64, (3, 3), activation='relu'))

# ANN
model = tf.keras.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation='relu'))
model.add(tf.keras.layers.Dense(64, activation='relu'))
model.add(tf.keras.layers.Dense(10,activation='softmax'))

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'],)
model.fit(f_image_train, f_label_train, epochs=10, batch_size=10)
model.summary()
model.save('fashion_mnist2.keras')

